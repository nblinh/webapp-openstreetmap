package fr.systemx.mic.resource.generation;

import com.wordnik.swagger.annotations.Api;
import com.wordnik.swagger.annotations.ApiOperation;
import com.wordnik.swagger.annotations.ApiParam;

import javax.ws.rs.GET;
import javax.ws.rs.Path;
import javax.ws.rs.QueryParam;
import javax.ws.rs.Produces;
import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.Response;

/**
 * Created by ba-linh.nguyen on 27/10/2016.
 */
@Path("/")
@Api(value = "/generation", description = "get generation REST")
public interface GenerationResource {
    @GET
    @Path("/getProjection")
    @Produces(MediaType.APPLICATION_JSON)
    @ApiOperation(value = "get projection", notes="example:<br>emisAttrType=attraction;name=genCaliTest30zones;purposeIndex=0")
    public Response getProjection(
            @ApiParam(value = "name of projection generated by appli", required = true)@QueryParam("name") String name,
            @ApiParam(value = "emission or attraction", required = true)@QueryParam("emisAttrType") String emisAttrType,
            @ApiParam(value = "index of purpose)", required = true)@QueryParam("purposeIndex") Integer purposeIndex);
    @GET
    @Path("/generationProjectionCalibration")
    @Produces(MediaType.APPLICATION_JSON)
    @ApiOperation(value = "get projection calibration",
            notes="example:<br>name=NewGenerationProjection;" +
                    "<br>calibrationName=genCaliTest30zones(name in the list of generation calibration);" +
                    "<br>zonalDataName=densities30zones(name in the list of zonalData);" +
                    "<br>zoningId=id_30zones")
    public Response generationProjectionCalibration(
            @ApiParam(value = "name of generation projection", required = true)@QueryParam("name") String name,
            @ApiParam(value = "zoning id (parentName_enfantName)", required = true)@QueryParam("zoningId") String zoningId,
            @ApiParam(value = "name of zonalData", required = true)@QueryParam("zonalDataName") String zonalDataName,
            @ApiParam(value = "name of generation calibration", required = true)@QueryParam("calibrationName") String calibrationName);
}
